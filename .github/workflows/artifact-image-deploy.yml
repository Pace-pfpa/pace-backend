name: Artifact Image Deploy
on:
  workflow_dispatch:

env:
  TAGGING_VERSION: ~
  GIT_OPS_REPOSITORY: ${ { env.GIT_OPS_REPOSITORY } }

jobs:
  artifact-build-and-deploy:
    name: Artifact Build & Deploy
    runs-on: ubuntu-latest
    outputs:
      tag_version: ${{steps.tag-output.outputs}}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Artifact Build and Tests
        run: mvn clean install

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Image Tagging
        id: versioning
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          tag_prefix: "v"
          major_pattern: "release:"
          minor_pattern: "feat:"
          version_format: "v${major}.${minor}.${patch}"
      - name: Docker Image Publish
        run: |
          docker build . --file Dockerfile --tag nutec/pace:latest --tag nutec/pace:${{ steps.versioning.outputs.version }} 
          docker push nutec/pace --all-tags 

      - name: Output Tag Version
        id: tag-output
        run: "${{ steps.versioning.outputs.version }} >> $GITHUB_OUTPUT"

  git-tagging:
    needs: artifact-build-and-deploy
    name: Git Tagging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git tagging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag_version: ${{needs.artifact-build-and-deploy.outputs.tag_version}}
        uses: actions/create-release@v1
        with:
          tag_name: $tag_version
          release_name: $tag_version

  artifact-image-version-update:
    needs: git-tagging
    name: Update Artifact Image Version
    runs-on: ubuntu-latest
    steps:
      - name: Update Artifact Image Version
        uses: passeidireto/trigger-external-workflow-action@main
        with:
          repository: $GIT_OPS_REPOSITORY
          event: update
          github_pat: ${{ secrets.GIT_OPS_TOKEN }}